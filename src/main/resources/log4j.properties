#log4j.rootLogger = [level],appenderName,appenderName2,...
#level是日志记录的优先级，分为OFF,TRACE,DEBUG,INFO,WARN,ERROR,FATAL,ALL
##Log4j建议只使用四个级别，优先级从低到高分别是DEBUG,INFO,WARN,ERROR
#通过在这里定义的级别，您可以控制到应用程序中相应级别的日志信息的开关
#比如在这里定义了INFO级别，则应用程序中所有DEBUG级别的日志信息将不被打印出来

log4j.rootLogger=DEBUG,debug,stdout

#Log4j针对不同包指定level：
#一般在生产环境中应用系统，日志级别调整为INFO以避免过多的输出日志。
#但某些时候，需要跟踪具体问题，那么就得打开DEBUG日志。
#但是如果打开log4j.rootLogger，则需要的信息就会淹没在日志的海洋中。
#此时，需要单独定某个或者某些Logger的日志级别为DEBUG，而rootLogger保持INFO不变。
#参考配置如下（指定com.cc5.btt.service包下的日志输出）
log4j.logger.com.cc5.btt.service=INFO

log4j.logger.org.springframework=OFF
log4j.logger.org.springframework.context.annotation=OFF

log4j.logger.debug=debug
log4j.appender.debug=org.apache.log4j.DailyRollingFileAppender
log4j.appender.debug.layout=org.apache.log4j.PatternLayout
log4j.appender.debug.layout.ConversionPattern= [%d{HH\:mm\:ss SSS}] %c{1} - %m%n
log4j.appender.debug.datePattern='.'yyyy-MM-dd
log4j.appender.debug.Threshold = DEBUG
log4j.appender.debug.append=true
log4j.appender.debug.File=${catalina.home}/logs/btt/debug.log

log4j.appender.stdout=org.apache.log4j.ConsoleAppender  
log4j.appender.stdout.Target=System.out  
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout  
log4j.appender.stdout.layout.ConversionPattern=%d{yyy-MM-dd HH\:mm\:ss SSS} %5p %c{1}\:%L - %m%n  

log4j.logger.java.sql.ResultSet=INFO
log4j.logger.org.apache=INFO
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG
